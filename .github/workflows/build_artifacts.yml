name: build_artifacts

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build_linux:
    strategy:
      matrix:
        target: [runecoral-cross-linux-x86_64, runecoral-cross-linux-aarch64, runecoral-cross-android-aarch64, runecoral-cross-android-x86_64]

    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          key: runecoral-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
            .cache

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo Install cross
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cross

      - name: Cross Test
        run: cross test ${{ matrix.target }}

  build_windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
            .cache
          key: runecoral-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Build Dependencies
        run: |
          pip install numpy

      - name: Build librunecoral
        env:
          BAZEL_VC: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC
        run: |
          mkdir -p dist/include
          mkdir -p dist/lib/windows/x86_64/
          bazel --batch --output_base .cache/bazel build --config windows //runecoral:runecoral
          cp runecoral/runecoral.h dist/include
          cp bazel-bin/runecoral/runecoral.lib dist/lib/windows/x86_64/

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # libclang is needed by bindgen
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm

      - name: Cargo Check
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: check

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: test

      - name: Use GNU Tar from Msys
        run: |
          echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          rm C:\msys64\usr\bin\bash.exe

  build_apple:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          key: runecoral-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
            .cache

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax

      - name: Install build dependencies
        run: |
          pip install numpy

      - name: Build packages
        run: |
            make runecoral_header
            make librunecoral-apple BAZEL="bazel --batch --output_base=$PWD/.cache"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo Check
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: check

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: test
