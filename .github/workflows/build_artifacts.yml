name: build_artifacts

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build_linux:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        target: [linux, android]

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          key: librunecoral-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
            .cache

      - name: Install build dependencies
        if: ${{ matrix.target == 'linux' }}
        run: |
          sudo apt-get install -y libegl1-mesa-dev libgles2-mesa-dev

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build packages
        run: |
            make runecoral_header
            make librunecoral-${{ matrix.target }} EDGETPU_ACCELERATION=true GPU_ACCELERATION=true

      # libclang is needed by bindgen
      # TODO: run the appropriate rust checks using cross for each matrix.target, and cpu architecture
      - name: Install LLVM and Clang
        if: ${{ matrix.target == 'linux' }}
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm

      - name: Install Rust
        if: ${{ matrix.target == 'linux' }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo Check
        if: ${{ matrix.target == 'linux' }}
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: check
          args: --all-features

      - name: Cargo Test
        if: ${{ matrix.target == 'linux' }}
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: test
          args: --all-features

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.run_id }}-librunecoral-artifacts-${{ matrix.target }}
          path: dist/

  build_windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
            .cache
          key: librunecoral-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Build Dependencies
        run: |
          pip install numpy

      - name: Build librunecoral
        env:
          BAZEL_VC: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC
        run: |
          mkdir -p dist/include
          mkdir -p dist/lib/windows/x86_64/
          bazel build --disk_cache .cache/bazel --config windows //runecoral:runecoral
          cp runecoral/runecoral.h dist/include
          cp bazel-bin/runecoral/runecoral.lib dist/lib/windows/x86_64/

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # libclang is needed by bindgen
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm

      - name: Cargo Check
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: check

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: test

      - uses: actions/upload-artifact@v2
        with:
          name: librunecoral-artifacts-windows-${{ github.run_id }}
          path: dist/

      - name: Shutdown Bazel
        run: |
          bazel shutdown
          wmic process where "name like '%java%'" delete
          wmic process where "name like '%bazel%'" delete

  build_apple:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Cache build dependencies
        uses: actions/cache@v2
        with:
          key: librunecoral-${{ runner.os }}-${{ github.workflow }}-${{ github.job }}-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            Cargo.lock
            .cache

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax

      - name: Install build dependencies
        run: |
          pip install numpy

      - name: Build packages
        run: |
            make runecoral_header
            make librunecoral-apple

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo Check
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: check

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        env:
          RUNECORAL_DIST_DIR: "${{ github.workspace }}/dist/"
        with:
          command: test

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.run_id }}-librunecoral-artifacts-apple
          path: dist/
